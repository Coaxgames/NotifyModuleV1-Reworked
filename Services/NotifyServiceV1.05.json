--TAG;/n{"notify":{"NME":"notify","Properties":{"LinkedSource":"","Source":"\nlocal module = {}\nlocal TweenService = game.Workspace:WaitForChild(\"Services\"):FindFirstChild(\"notify\"):FindFirstChild(\"TweenService\"):FindFirstChild(\"Event\") -- Replace \"notify\" with the location of the module\nlocal NVersion=script:WaitForChild(\"Version\")\nNVersion.Value=\"V1.04\"\nprint(\"Started notify Module\")\nfunction insertContainer(p)\n\tif p == nil then\n\t\tlocal simpleSuite = Instance.new(\"ScreenGui\")\n\t\tsimpleSuite.Name = \"simpleSuite\"\n\t\tsimpleSuite.DisplayOrder = 25\n\t\tsimpleSuite.ZIndexBehavior = Enum.ZIndexBehavior.Sibling\n\t\tsimpleSuite.Parent = game:GetService(\"StarterGui\")\n\n\t\tlocal Notifications = Instance.new(\"Frame\")\n\t\tNotifications.BackgroundTransparency = 1\n\t\tNotifications.Name = \"Notifications\"\n\t\tNotifications.Position = UDim2.new(0.815, 0, 0.08, 0)\n\t\tNotifications.Size = UDim2.new(0.175, 0, 0.9, 0)\n\t\tNotifications.Parent = simpleSuite\n\n\t\tlocal UIListLayout = Instance.new(\"UIListLayout\")\n\t\tUIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center\n\t\tUIListLayout.Padding = UDim.new(0.025, 0)\n\t\tUIListLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom\n\t\tUIListLayout.Parent = Notifications\n\telse\n\t\tlocal simpleSuite = Instance.new(\"ScreenGui\")\n\t\tsimpleSuite.Name = \"simpleSuite\"\n\t\tsimpleSuite.DisplayOrder = 25\n\t\tsimpleSuite.ZIndexBehavior = Enum.ZIndexBehavior.Sibling\n\t\tsimpleSuite.Parent = p:WaitForChild(\"PlayerGui\")\n\n\t\tlocal Notifications = Instance.new(\"Frame\")\n\t\tNotifications.BackgroundTransparency = 1\n\t\tNotifications.Name = \"Notifications\"\n\t\tNotifications.Position = UDim2.new(0.815, 0, 0.08, 0)\n\t\tNotifications.Size = UDim2.new(0.175, 0, 0.9, 0)\n\t\tNotifications.Parent = simpleSuite\n\n\t\tlocal UIListLayout = Instance.new(\"UIListLayout\")\n\t\tUIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center\n\t\tUIListLayout.Padding = UDim.new(0.025, 0)\n\t\tUIListLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom\n\t\tUIListLayout.Parent = Notifications\n\tend\nend\n\ninsertContainer()\n\n--Preset colors\nlocal colors = {\n\tNILColor = Color3.fromRGB(79, 79, 79),\n\talert = Color3.fromRGB(255, 105, 105),\n\tsuccess = Color3.fromRGB(105, 255, 105),\n\twarning = Color3.fromRGB(255, 255, 105),\n\tinfo = Color3.fromRGB(105, 105, 255),\n\tdefault = Color3.fromRGB(255, 255, 255)\t\n}\n\nfunction module.notify(target,title,text,color,dur)\n\n\tif target:WaitForChild(\"PlayerGui\"):FindFirstChild(\"simpleSuite\") ~= nil then\n\n\t\tlocal duration\n\n\t\tif dur == nil then\n\t\t\tduration = 3\n\t\telse if dur ~= nil and dur >= 0.1 then\n\t\t\t\tduration = tonumber(dur)\n\t\t\tend\n\t\tend\n\t\t--Rescripted by botwot7024 (Below this line)\n\t\tif title ~= nil and text ~= nil and color ~= nil then\n\t\t\tlocal selectedColor = colors.default\n\t\t\tif type(color)==\"string\" then--Only here for backwards compatibility(old format)\n\t\t\t\tif string.lower(color) == \"alert\" or string.lower(color) == \"success\" or string.lower(color) == \"warning\" or string.lower(color) == \"info\" or string.lower(color) == \"default\" then\n\t\t\t\t\tif string.lower(color) == \"alert\" then\n\t\t\t\t\t\tselectedColor = colors.alert\n\t\t\t\t\telseif string.lower(color) == \"success\" then\n\t\t\t\t\t\tselectedColor = colors.success\n\t\t\t\t\telseif string.lower(color) == \"warning\" then\n\t\t\t\t\t\tselectedColor = colors.warning\n\t\t\t\t\telseif string.lower(color) == \"info\" then\n\t\t\t\t\t\tselectedColor = colors.info\n\t\t\t\t\telseif string.lower(color) == \"default\" then\n\t\t\t\t\t\tselectedColor = colors.default\n\t\t\t\t\tend\n\t\t\t\telse--if String but not table or know preset then default to NIL color\n\t\t\t\t\twarn(\"Color Select Was Missing, Defaulted to NIL color!\")\n\t\t\t\t\tselectedColor = colors.NILColor\n\t\t\t\tend\t\n\t\t\telseif type(color)==\"table\" then--If new format then\n\t\t\t\tif color.R==nil or color.G==nil or color.B==nil then--The New DefaultColor System\n\t\t\t\t\twarn(\"Color Table Was Missing, Defaulted to NIL color!\")\n\t\t\t\t\tselectedColor = colors.NILColor\n\t\t\t\telse\n\t\t\t\t\tselectedColor = Color3.fromRGB(math.clamp(color.R*255,0,255), math.clamp(color.G*255,0,255), math.clamp(color.B*255,0,255))\n\t\t\t\tend\n\t\t\telse--if no color defined at all default to \"Default\"\n\t\t\t\tselectedColor = colors.default\n\t\t\tend\n\t\t\t--Rescripted by botwot7024 (Above this line)\n\t\t\tlocal notification_number = 1\n\n\n\t\t\tif game.Players:FindFirstChild(target.Name) then\n\t\t\t\tlocal player = game.Players:FindFirstChild(target.Name)\n\n\t\t\t\tfor _,v in pairs(player.PlayerGui.simpleSuite.Notifications:GetChildren()) do\n\t\t\t\t\tnotification_number = notification_number +1\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t--READ ME | DEV NOTE\n\t\t\t\t--Change this to a server Asset, Rather than creating it here.\n\t\t\t\t--[[Solution:\n\t\t\t\t\tSimply clone a GUI(the stuff below) asset with a animation script(The TweenScript)\n\t\t\t\t\tUse instance varibles to set Tween time and text...\n\t\t\t\t\t\n\t\t\t\t\tif the stuff above is added we no longer need to wait for these notifacations to finish\n\t\t\t\t\n\t\t\t\t]]\n\t\t\t\t\n\t\t\t\tlocal Notification1 = Instance.new(\"Frame\")\n\t\t\t\tNotification1.BackgroundColor3 = Color3.fromRGB(25, 25, 25)\n\t\t\t\tNotification1.BorderSizePixel = 0\n\t\t\t\tNotification1.Name = \"Notification\"..notification_number\n\t\t\t\tNotification1.Size = UDim2.new(0, 0, 0, 0)\n\t\t\t\tNotification1.Parent = player.PlayerGui:WaitForChild(\"simpleSuite\").Notifications\n\n\t\t\t\tlocal Color = Instance.new(\"Frame\")\n\t\t\t\tColor.BackgroundColor3 = selectedColor\n\t\t\t\tColor.BorderSizePixel = 0\n\t\t\t\tColor.Name = \"Color\"\n\t\t\t\tColor.Size = UDim2.new(0.025, 0, 1, 0)\n\t\t\t\tColor.Parent = Notification1\n\n\t\t\t\tlocal Content = Instance.new(\"Frame\")\n\t\t\t\tContent.BackgroundTransparency = 1\n\t\t\t\tContent.Name = \"Content\"\n\t\t\t\tContent.Position = UDim2.new(0.025, 0, 0, 0)\n\t\t\t\tContent.Size = UDim2.new(0.975, 0, 1, 0)\n\t\t\t\tContent.Parent = Notification1\n\n\t\t\t\tlocal Title = Instance.new(\"TextLabel\")\n\t\t\t\tTitle.BackgroundTransparency = 1\n\t\t\t\tTitle.Font = Enum.Font.SourceSansSemibold\n\t\t\t\tTitle.Name = \"Title\"\n\t\t\t\tTitle.Size = UDim2.new(1, 0, 0.4, 0)\n\t\t\t\tTitle.Text = title\n\t\t\t\tTitle.TextColor3 = Color3.fromRGB(255, 255, 255)\n\t\t\t\tTitle.TextScaled = true\n\t\t\t\tTitle.TextSize = 14\n\t\t\t\tTitle.TextWrapped = true\n\t\t\t\tTitle.Parent = Content\n\n\t\t\t\tlocal Text = Instance.new(\"TextLabel\")\n\t\t\t\tText.BackgroundTransparency = 1\n\t\t\t\tText.Font = Enum.Font.SourceSans\n\t\t\t\tText.Name = \"Text\"\n\t\t\t\tText.Position = UDim2.new(0, 0, 0.2999997, 0)\n\t\t\t\tText.Size = UDim2.new(1, 0, 0.7, 0)\n\t\t\t\tText.Text = text\n\t\t\t\tText.TextColor3 = Color3.fromRGB(255, 255, 255)\n\t\t\t\tText.TextScaled = true\n\t\t\t\tText.TextSize = 14\n\t\t\t\tText.TextWrapped = true\n\t\t\t\tText.Parent = Content\n\n\t\t\t\t--Rescripted by botwot7024\n\t\t\t\tif script:FindFirstChild(\"TweenService\") then\n\t\t\t\t\tlocal Time=os.clock()\n\t\t\t\t\tprint(\"Tweening 1 at \"..Time)\n\t\t\t\t\tTweenService:Fire(Notification1, UDim2.new(1, 0, 0.1, 0), duration, UDim2.new(0, 0, 0, 0), 1.1, Time)\n\t\t\t\t\tprint(\"Tweening 2 at \"..os.clock())\n\t\t\t\telse\n\t\t\t\t\tNotification1:TweenSize(UDim2.new(1, 0, 0.1, 0))\n\t\t\t\t\twait(duration)\n\t\t\t\t\t\n\t\t\t\t\tNotification1:TweenSize(UDim2.new(0, 0, 0, 0))\n\t\t\t\t\twait(1.1)\n\t\t\t\t\t\n\t\t\t\t\tNotification1:Destroy()\n\t\t\t\tend\n\t\t\t\t--Rescripted by botwot7024\n\t\t\tend\n\t\tend\n\telse\n\t\tinsertContainer(target)\n\t\twait(0.05)\n\t\tmodule.notify(target,title,text,color,dur)\n\tend\n\nend\n\nreturn module\n\n\n","Parent":"ProjectFolder","Archivable":"true","Name":"notify"},"Parent":"ProjectFolder","CLS":"ModuleScript","Children":{"Instructions":{"NME":"Instructions","Parent":"notify","Properties":{"Enabled":"false","LinkedSource":"","Disabled":"true","Parent":"notify","Name":"Instructions","Archivable":"true","Source":"if script.Enabled then--Turn off script if enabled for whatever reason\n\tscript.Enabled=false\nend\n\n--[[\nModified By BotWot7024\n\n\t\t/// simpleSuite Version 1.0.1 \\\\\\\n\t\t\t\t\tNotify\n\t\t\t\t\t\n\t\tNotify is a easy to use notification system\n\t\twhich allows you to send notifications to players\n\t\tin your game.\n\t\t\n\t\tUsage:\n\t\t\n\t\tlocal notify = require(script.Parent.notify)\n\t\tnotify.notify(player,\"Title\",\"Text\",\"Color/Style\",Duration)\n\t\t\n\t\tplayer should be a player, example: game.Players.Player1\n\t\tTitle should be a string, example: \"Hello,\"\n\t\tText should be a string, example: \"world!\"\n\t\tColor can be a string or table, example: \"default\" or \"local Color = {[\"R\"]=255,[\"G\"]=0,[\"B\"]=0}\"\n\t\tDuration should be a number, example: 3\n\t\t\n\t\tCurrent Colors:\n\t\t\talert - Red\n\t\t\tsuccess - Green\n\t\t\twarning - Yellow\n\t\t\tinfo - Blue\n\t\t\tdefault - White\n\t\t\tNILColor - Gray(this color means the custom color sent has an NIL value)\n\t\t\t\n\t\tCustom Color System(Added In):\n\t\t\t1: To Display custom colors Just Send this through the regular Color varible, Start with this format:\n\t\t\t\tlocal Color = {\n\t\t\t\t\t[\"R\"]=255, --Clamped To 0-255\n\t\t\t\t\t[\"G\"]=0, --Clamped To 0-255\n\t\t\t\t\t[\"B\"]=0, --Clamped To 0-255\t\n\t\t\t\t}\n\t\t\t\n\t\t\t2: Then Send that into Notify just like before:\n\t\t\t   local notify = require(notify) -- Replace \"notify\" with the location of the module\n\t\t\t   local color = {[\"R\"]=255, [\"G\"]=0, [\"B\"]=0,}\n\t\t\t   notify.notify(target,title,text,color,dur)\n\n\t\t\t3: You should Now have custom colors, \n\t\t\t\tSide note!!: If it failed, the Notify Popups will use gray(Meaning You Did not send the Format Correctly)\n\n\t\t\n\t\t\n\t\tNotify is currently in a beta stage, more features will be added in the future.\n\t\tPlease report any bugs you find to BotWot7024 (Discord Support can be found in our games, you will need RobloxVerfiy!)\n\n--]]\n\n\n\n"},"Children":[],"CLS":"Script"},"Updater":{"NME":"Updater","Parent":"notify","Properties":{"Enabled":"true","LinkedSource":"","Disabled":"false","Parent":"notify","Name":"Updater","Archivable":"true","Source":"--Settings\nlocal ExpirmentalUpdates=true\nlocal UseCustomVersion=false\n\n--Script Start\nif UseCustomVersion then\n\tExpirmentalUpdates=false\nend\nif ExpirmentalUpdates then\n\tUseCustomVersion=false\nend\nlocal TweenService = game.Workspace:WaitForChild(\"Services\"):FindFirstChild(\"notify\"):FindFirstChild(\"TweenService\"):FindFirstChild(\"Event\") -- Replace \"notify\" with the location of the module\nlocal NVersion=script.Parent:WaitForChild(\"Version\")\n--Gather Services\nlocal CodeService = game:GetService(\"HttpService\")\nlocal NewCode = CodeService:GetAsync(\"https://raw.githubusercontent.com/Coaxgames/NotifyModuleV1-Reworked/CommunityRelease/Changes.md\")\n--local NewInst = CodeService:GetAsync(\"https://raw.githubusercontent.com/Coaxgames/NotifyModuleV1-Reworked/CommunityRelease/InstuctionForModule.md\")\n--print(NewCode)\n--Get local Notify Version\nlocal Var1=script.Parent.Version.Value\nlocal SplitV1=string.split(Var1, \"V\")\nprint(SplitV1)\nlocal LocalVersion=SplitV1[2]\nlocal FindVersion--GitVersion\nLocalVersion=tonumber(LocalVersion)\nif LocalVersion==nil then\n\tprint(\"Cannot Update, Local version is missing\")\n\tLocalVersion=\"Fallback\"\nend\n--Look for version inside of NewCode to see if we are up to date\nif NewCode~=nil then\n\tNewCode=string.gsub(NewCode, \"```\", \"\")\n\tFindVersion=string.match(NewCode, \"NVersion.Value=\"..'%b\"\"')\n\tFindVersion=string.gsub(FindVersion, \"NVersion.Value=\", \"\")\n\tFindVersion=string.gsub(FindVersion, \"\\\"\", \"\")\n\tFindVersion=string.gsub(FindVersion, \"V\", \"\")\n\tFindVersion=tonumber(FindVersion)\n\tprint(\"Local Version=\"..LocalVersion..\", GitVersion=\"..FindVersion)\n\tif LocalVersion~=nil and LocalVersion < FindVersion then\n\t\tif ExpirmentalUpdates then\n\t\t\tprint(\"Requesting Live Patch...\")\n\t\t\tif game:GetService(\"ServerScriptService\"):FindFirstChild(\"NotifyUpdater\"):FindFirstChild(\"UpdateComs\") then\n\t\t\t\tgame:GetService(\"ServerScriptService\").NotifyUpdater.UpdateComs:Fire(script.Parent.Parent:FindFirstChild(\"notify\"), LocalVersion, FindVersion, NewCode)\n\t\t\t\treturn\t\n\t\t\telse\n\t\t\t\tprint(\"Cannot Patch: Missing UpdateComs Event\")\n\t\t\tend\n\t\t\tprint(\"Outdated Version, Please Update with NotifyUpdater...\")\n\t\t\twarn(\"A new Update is available for NotifyV\"..LocalVersion..\" --> V\"..FindVersion..\"\\nUse NotifyUpdater if you have it\")\n\t\telse\n\t\t\tprint(\"Updates are turned off, notify is out-of-date\")\n\t\tend\n\telse\n\t\tprint(\"Updates are turned on, notify is up-To-Date\")\n\tend\nend\n\n--StartUp\n\n\n"},"Children":{"Updater is being deprecated":{"NME":"Updater is being deprecated","Parent":"Updater","Properties":{"Enabled":"false","LinkedSource":"","Disabled":"true","Parent":"Updater","Name":"Updater is being deprecated","Archivable":"true","Source":"--Script name says it all"},"Children":[],"CLS":"Script"}},"CLS":"Script"},"Version":{"NME":"Version","Parent":"notify","Properties":{"Value":"V1.04","Parent":"notify","Archivable":"true","Name":"Version"},"Children":[],"CLS":"StringValue"},"TweenService":{"NME":"TweenService","Parent":"notify","Properties":{"Enabled":"true","LinkedSource":"","Disabled":"false","Parent":"notify","Name":"TweenService","Archivable":"true","Source":"\n\nscript.Event.Event:Connect(function(NotifyFrame, StartSize, StartDur, EndSize, EndDur, DebugTime)\n\tprint(\"StartingTween at \"..DebugTime)\n\tNotifyFrame:TweenSize(UDim2.new(1, 0, 0.1, 0))\n\twait(StartDur)\n\n\tNotifyFrame:TweenSize(UDim2.new(0, 0, 0, 0))\n\twait(EndDur)\n\n\tNotifyFrame:Destroy()\n\tprint(\"FinishedTween at \"..os.clock())\nend)"},"Children":{"Event":{"NME":"Event","Parent":"TweenService","Properties":{"Parent":"TweenService","Name":"Event","Archivable":"true"},"Children":[],"CLS":"BindableEvent"}},"CLS":"Script"}},"PackageInfo":{"PackageNME":"notify","PackageDESC":"No Desc information Set!"}}}
